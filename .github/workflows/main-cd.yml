name: Main Workflow

on:
    workflow_run:
      workflows: ["Dev Workflow"]
      types:
        - completed

permissions:
  contents: write

jobs:
  main-workflow:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Install dependencies and run tests for backend
      - name: Dependencies install for backend
        run: |
          cd backend
          npm install

      - name: Unit tests for backend
        run: |
          cd backend
          npm test

      # 3. Install dependencies and run tests for frontend
      - name: Dependencies install for frontend
        run: |
          cd frontend
          npm install

      - name: Unit tests for frontend
        run: |
          cd frontend
          npm test

      # 4. Set up Chrome for E2E Tests
      - name: Set up Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -fy install
          CHROMEDRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget -N https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/bin/chromedriver
          sudo chmod +x /usr/bin/chromedriver
          google-chrome --version
          chromedriver --version

      # 5. Run E2E tests
      - name: Run E2E Tests
        run: |
          cd e2e-tests
          npm install
          npm test

      # 6. Login to Docker
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 7. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      # 8. Verify Docker Compose installation
      - name: Verify Docker Compose
        run: docker-compose --version

      # 9. Build and Push Docker Images
      - name: Build and Push Docker Images
        run: |
          docker-compose build
          docker-compose push
